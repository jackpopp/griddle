// IMPORTS
@import 'normalize.css'

// VARS

// grid setup
$columns: 8
$maxWidth: 1280px
$columnPad: 12px
$rowPad: 12px

// breakpoints variables
$xsmall: 320px
$small: 420px
$medium: 640px // dont really need this
$large: 1025px
$xlarge: 1280px

// default styling
$mainColor: #CC9393
$bodyColor: rgb(63, 63, 63)

$nuteralColor: #E2E2E2
//$errorColor: #CE5F5F
$errorColor: #D88585
$successColor: #9FD885

// reset and cleafix

*
	box-sizing: border-box

ul
	margin: 0
	padding: 0
	li
		padding: 5px 0
		margin: 0
		list-style: none

// end reset and clearfix

// utility classes

.clearfix:after 
	visibility: hidden
	display: block
	font-size: 0
	content: " "
	clear: both
	height: 0
	
* html .clearfix
	zoom: 1
*:first-child+html .clearfix 
	zoom: 1

.left
	float: left

.right
	float: right


body
	//font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif
	font-family: "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Geneva, Verdana, sans-serif
	font-weight: 300
	-webkit-font-smoothing: antialiased
	word-break: break-word
	margin: 0
	padding: 0
	color: $bodyColor

// element styling
h1,h2,h3,h4,h5,h6,p,a
	color: $bodyColor

a
	color: $mainColor
	text-decoration: none
	transition: all 0.5s
	&:hover
		color: darken($mainColor, 20%)

input, textarea
	font-size: 14px
	padding: 8px
	margin: 0 0 10px 0
	border: 1px solid rgb(170, 170, 170)
	background: white
	width: 100%
	&:focus
		background: whitesmoke
		outline: none
		border-color: gray

textarea
	height: 100px

label
	font-size: 14px
	margin-bottom: 7px
	margin-left: -2px
	display: block

button
	padding: 10px
	margin: 10px 0
	width: 80px
	border: 0
	background: $mainColor
	color: white
	font-size: 13px
	display: block
	&:hover
		background: darken($mainColor, 10%)

// copy

h1,h2,h3,h4,h5,h6,p
	margin-top: 10px
p
	font-size: 16px
	line-height: 1.6
	margin-bottom: 16px

// GRID

.container
	max-width: $maxWidth
	margin: 0 auto

.row
	width: 100%
	> .row
		margin-left: -$rowPad
		margin-right: -$rowPad
	@extend .clearfix
	&.collapse
		padding: 0
	&.collapse-columns
		.column
			padding: 0

.column
	padding-left: $columnPad
	padding-right: $columnPad
	float: left
	width: 100%
	&.collapse
		padding: 0

// dynamically create our columns
@mixin createColumns
	@for $i from 1 through $columns
		.col-#{$i}
			@media only screen and (min-width: $large)
				width: 100%/ ($columns / $i)
			@extend .column
		.col-#{$i}-med
			@media only screen and (min-width: $medium) and (max-width: $large - 1)
				width: 100%/ ($columns / $i)
			@extend .column
		.col-#{$i}-small
			@extend .column
			@media only screen and (max-width: $medium - 1)
				width: 100%/ ($columns / $i)


@include createColumns

// fullwidth pullout within the main container
.pull-out:before, .pull-out:after
	content: ""
	position: absolute
	top: 0
	bottom: 0
	width: 9999px
	&:before
		right: 100%
	&:after 
		left: 100%


// VISIBILITY
*[class^="hide-for-"], *[class*=" hide-for-"]
	display: none!important

.hide-for-small
	@media only screen and (min-width: $medium)
		display: inherit!important

.hide-for-medium-down
	@media only screen and (min-width: $large)
		display: inherit!important

.hide-for-medium-up
	display: inherit!important
	@media only screen and (min-width: $medium)
		display: none!important

.hide-for-medium
	display: inherit!important
	@media only screen and (min-width: $medium) and (max-width: $large - 1)
		display: none!important

.hide-for-large
	display: inherit!important
	@media only screen and (min-width: $large)
		display: none!important

*[class^="show-for-"], *[class*=" show-for-"]
	display: none!important

.show-for-small
	@media only screen and (max-width: $medium - 1)
		display: inherit!important

.show-for-medium
	@media only screen and (min-width: $medium) and (max-width: $large - 1)
		display: inherit!important

.show-for-medium-down
	display: inherit!important
	@media only screen and (min-width: $large)
		display: none!important

.show-for-medium-up
	@media only screen and (min-width: $medium)
		display: inherit!important

.show-for-large
	@media only screen and (min-width: $large)
		display: inherit!important
